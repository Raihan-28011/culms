drop user c##culms cascade;

create user c##culms identified by culms;
grant all privileges to c##culms container=all;
grant sysdba to c##culms container=all;

connect c##culms/culms;

drop table submits;
drop table answers;
drop table quiz_questions;
drop table assignments;
drop table quiz;
drop table contents;
drop table participates;
drop table course;
drop table users;

create table users(
    u_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1),
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    password VARCHAR2(255) NOT NULL,
    join_date DATE DEFAULT SYSDATE,
    CONSTRAINT users_email_con UNIQUE(email),
    CONSTRAINT users_uid_con PRIMARY KEY (u_id)
);

create table course(
    c_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1),
    created_by NUMBER,
    title VARCHAR2(255) NOT NULL,
    description VARCHAR2(500),
    course_code VARCHAR2(20),
    enrollment_code VARCHAR2(20),
    create_date DATE DEFAULT SYSDATE,
    CONSTRAINT course_created_by_con FOREIGN KEY (created_by) references users(u_id) ON DELETE CASCADE,
    CONSTRAINT course_pk_con PRIMARY KEY (c_id)
);

create table participates(
    participant_id NUMBER,
    course_taken NUMBER,
    CONSTRAINT participates_pid_con FOREIGN KEY (participant_id) references users(u_id) ON DELETE CASCADE,
    CONSTRAINT participates_ctaken_con FOREIGN KEY (course_taken) references course(c_id) ON DELETE CASCADE,
    CONSTRAINT participates_pk_con PRIMARY KEY (participant_id, course_taken)
);

create table contents (
  content_id NUMBER,
  content_for NUMBER,
  title VARCHAR2(65),
  summary VARCHAR2(1024),
  lesson VARCHAR(4000),
  create_date DATE DEFAULT SYSDATE,
  constraint content_cfor_con FOREIGN KEY (content_for) REFERENCES course(c_id) ON DELETE CASCADE,
  constraint content_pk_con PRIMARY KEY (content_id, content_for)
);

create table quiz (
    quiz_id VARCHAR2(200),
    quiz_for NUMBER,
    title VARCHAR(512),
    total_points NUMBER,
    CONSTRAINT quiz_qfor_con FOREIGN KEY (quiz_for) REFERENCES course(c_id) ON DELETE CASCADE,
    CONSTRAINT quiz_pk_con PRIMARY KEY (quiz_id)
);

create table quiz_questions (
    question_id NUMBER,
    question_for VARCHAR2(20),
    question VARCHAR(1024),
    option1 VARCHAR2(1024),
    option2 VARCHAR2(1024),
    option3 VARCHAR2(1024),
    option4 VARCHAR2(1024),
    option5 VARCHAR2(1024),
    answer NUMBER,
    explanation VARCHAR(1024),
    points NUMBER,
    CONSTRAINT quiz_ques_qfor_con FOREIGN KEY (question_for) REFERENCES quiz(quiz_id) ON DELETE CASCADE,
    CONSTRAINT quiz_ques_pk_con PRIMARY KEY (question_id, question_for)
);


create table answers (
    question_id NUMBER,
    quiz_id VARCHAR2(20),
    participant_id NUMBER,
    chosen_option NUMBER,
    obtained_points NUMBER,
    CONSTRAINT pqa_qid_con FOREIGN KEY (question_id, quiz_id) REFERENCES quiz_questions(question_id, question_for) on DELETE CASCADE,
    CONSTRAINT pqa_pk_con PRIMARY KEY (question_id, quiz_id, participant_id)
);

create table assignments (
    assignment_id VARCHAR2(20),
    assignment_for NUMBER,
    title VARCHAR2(65),
    description VARCHAR2(4000),
    attachments VARCHAR2(1024),
    points NUMBER,
    CONSTRAINT assg_assg_for_con FOREIGN KEY (assignment_for) REFERENCES course(c_id) ON DELETE CASCADE,
    CONSTRAINT assg_pk_con PRIMARY KEY (assignment_id)
);

create table submits (
    participant_id NUMBER,
    assignment_id VARCHAR2(20),
    submitted_attachments VARCHAR2(1024),
    obtained_points NUMBER,
    CONSTRAINT sbmts_pid_con FOREIGN KEY (participant_id) REFERENCES users(u_id) ON DELETE CASCADE,
    CONSTRAINT sbmts_assgid_con FOREIGN KEY (assignment_id) REFERENCES assignments(assignment_id) ON DELETE CASCADE,
    CONSTRAINT sbmts_pk_con PRIMARY KEY (participant_id, assignment_id)
);

commit;